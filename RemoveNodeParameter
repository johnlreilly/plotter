
let $simpleXML := $input.in_fu
let $nodeArray := (

  for $item in $simpleXML//*    
    let $name := $item/*:title/text()
    where local-name($item) = 'flow'
    return concat(
    '{',
    'key : "', $item/@id, '", ',    
    'color: "blue"',
    '}'
    ),

  for $item in $simpleXML//*    
    let $name := $item/*:title/text()
    where local-name($item) = 'subflow'
    return concat(
    '{',
    'key : "', $item/@id, '", ',    
    'color: "orange"',
    '}'
    ),

  for $item in $simpleXML//*    
    let $name := $item/*:title/text()
    where local-name($item) = 'assignment'
    return concat(
    '{',
    'key : "', $item/@id, '", ',    
    'color: "red"',
    '}'
    ),

  for $item in $simpleXML//*    
    let $name := $item/*:title/text()
    where local-name($item) = 'jumpTo'
    return concat(
    '{',
    'key : "', $item/@id, '", ',    
    'color: "yellow"',
    '}'
    ),

  for $item in $simpleXML//*    
    let $name := $item/*:title/text()
    where local-name($item) = 'end'
    return concat(
    '{',
    'key : "', $item/@id, '", ',    
    'color: "black"',
    '}'
    ),

  for $item in $simpleXML//*    
    let $name := $item/*:title/text()
    where local-name($item) = 'start'
    return concat(
    '{',
    'key : "', $item/@id, '", ',    
    'color: "white"',
    '}'
    )

)

let $linkArray := (

  for $item in $simpleXML//*    
    let $name := $item/*:title/text()
    let $parent := $item/..
    where local-name($item) = 'link'
    return concat(
    '{',
    'from: "', $parent/@id, '", ',    
    'to: "', $item/@targetId, '"',
    '}'
    )

 )

return concat(
    '[', string-join($nodeArray, ', '), ']', 
    ', ',
    '[', string-join($linkArray, ', '), ']' 
)